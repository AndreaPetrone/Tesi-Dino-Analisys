# ALPHA DIVERSITA' COMBINATORIA

# Obiettivo del codice:
  Calcolare la diversità α (numero di specie) per ciascun plot, ripetendo 100 volte il confronto tra il survey fisso e una delle sue repliche resurvey selezionata   a caso, e poi visualizzare i risultati con media e deviazione standard.

# Lista dei gruppi di plot e relative colonne (survey + possibili resurvey)
gruppi_plot <- list(
  P1 = c("S_1", "R_1"),
  P2 = c("S_2", "R_2"),
  P1.1 = c("S_1.1", "R_1.1a", "R_1.1b", "R_1.1c"),
  P1.2 = c("S_1.2", "R_1.2a", "R_1.2b", "R_1.2c"),
  P1.3 = c("S_1.3", "R_1.3a", "R_1.3b", "R_1.3c"),
  P2.1 = c("S_2.1", "R_2.1a", "R_2.1b", "R_2.1c"),
  P2.2 = c("S_2.2", "R_2.2a", "R_2.2b", "R_2.2c"),
  P2.3 = c("S_2.3", "R_2.3a", "R_2.3b", "R_2.3c"),
  P3.1 = c("S_3.1", "R_3.1a", "R_3.1b", "R_3.1c"),
  P3.2 = c("S_3.2", "R_3.2"),
  P3.3 = c("S_3.3", "R_3.3"),
  P12 = c("S_12", "R_12a", "R_12b", "R_12c")
)

# Numero di iterazioni: indichi quante volte vuoi ripetere l’estrazione casuale dei resurvey per ciascun plot.
n_iterazioni <- 100

# Lista per salvare i risultati: Servirà per salvare tutti i risultati per ogni plot e ogni iterazione.
risultati_alpha <- list()

# Loop su ciascun gruppo e serve per separare la colonna survey da quella del resurvey
for (nome_plot in names(gruppi_plot)) {
  colonne <- gruppi_plot[[nome_plot]]        # prendi colonne del plot corrente
  survey_col <- colonne[1]                   # il primo è il survey
  resurvey_cols <- colonne[-1]               # gli altri sono i resurvey
  
  alpha_survey <- sum(matrice_specie_plot[, survey_col] > 0) # calcolo alpha survey costante: abbondanza>0
  alpha_resurvey_iter <- numeric(n_iterazioni) # Un vettore lungo 100 per salvare i valori di α per ogni resurvey selezionato casualmente.
  
  for (i in 1:n_iterazioni) {
    col_scelta <- if (length(resurvey_cols) > 1) sample(resurvey_cols, 1) else resurvey_cols
    alpha_resurvey_iter[i] <- sum(matrice_specie_plot[, col_scelta] > 0)
  }

#Per ogni iterazione:
  - scegli a caso una colonna tra i resurvey
  - calcoli la diversità α (numero di specie presenti) e la salvi

  risultati_alpha[[nome_plot]] <- data.frame(
    Plot = nome_plot,
    Tipo = "Resurvey",
    Alpha = alpha_resurvey_iter
  )
  
  # Aggiungi il valore costante del survey
  risultati_alpha[[paste0(nome_plot, "_survey")]] <- data.frame(
    Plot = nome_plot,
    Tipo = "Survey",
    Alpha = rep(alpha_survey, n_iterazioni)
  )
}

# Crea due data.frame:
  - uno con i valori ottenuti dai resurvey (100 valori diversi),
  - uno con il valore fisso del survey replicato 100 volte, per poterli confrontare in un grafico.

# Unisci tutti i risultati: Combina tutti i risultati della lista risultati_alpha in un unico dataframe.
alpha_combinatoria_df <- do.call(rbind, risultati_alpha)

# Calcola media e deviazione standard per ciascun Plot e Tipo
alpha_summary <- alpha_combinatoria_df %>%
  group_by(Plot, Tipo) %>%
  summarise(
    media = mean(Alpha),
    sd = sd(Alpha),
    .groups = "drop"
  )

# Fattore Plot con P12 alla fine
plot_order <- c("P1", "P1.1", "P1.2", "P1.3",
                "P2", "P2.1", "P2.2", "P2.3",
                "P3.1", "P3.2", "P3.3", "P12")

# Ordina fattori
alpha_summary <- alpha_summary %>%
  mutate(
    Plot = factor(Plot, levels = plot_order),
    Tipo = factor(Tipo, levels = c("Survey", "Resurvey"))
  ) %>%
  arrange(Plot, Tipo)  # Ordina i dati effettivi

# Grafico con barre e barre d’errore
ggplot(alpha_summary, aes(x = Plot, y = media, fill = Tipo)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
  geom_errorbar(aes(ymin = media - sd, ymax = media + sd),
                position = position_dodge(width = 0.9), width = 0.2) +
  scale_fill_manual(values = c("Survey" = "lightblue", "Resurvey" = "salmon")) +
  labs(title = "Alpha-diversità combinatoria (media ± SD)",
       x = "Plot", y = "Numero di specie") +
  theme_minimal()

# Perché il survey appare come una linea piatta nel boxplot?
  - Perché il valore della diversità α del survey non cambia mai: è uno solo per ogni plot.
  - per poterlo inserire in un boxplot, devi avere un vettore con più di un valore (altrimenti R non disegna il boxplot).
  - Quindi abbiamo replicato quel singolo valore 100 volte (per avere un boxplot visibile). Ma siccome tutti i valori sono uguali, il boxplot:
    - ha mediana = quartili = valore costante
  - quindi appare come una linea orizzontale sottile (senza "box").

# Perché il resurvey ha un’area maggiore (boxplot ampio)?
  - Ogni resurvey è estratto casualmente tra 2 o 3 repliche, in ogni iterazione.
  - In 100 iterazioni potresti avere diversi valori di α (numero di specie), a seconda di quale replica viene selezionata.
  - Risultato: ottieni una distribuzione di valori → da qui il boxplot ha un’estensione, che rappresenta:
    - la variabilità tra resurvey dello stesso plot
    - quanto può cambiare la diversità in base a quale replica è selezionata.

# nel nostro caso per visualizzare meglio i valori è stato fatto un barplot
  - Barre d’errore nere = deviazione standard (SD) sul valore medio del Resurvey
  - Se la barra rossa è più bassa → potenziale perdita di diversità
  - Se la barra rossa è più alta → potenziale aumento di diversità
  - Se le barre sono simili → diversità stabile
  - Alcune SD alte (es. P3.1, P12) suggeriscono variabilità interna elevata tra i 3 rilievi resurvey usati → cambiamenti locali o instabilità.

